/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import domain.CarDriver;
import domain.HeavyMachinery;
import file.HeavyMachineryFile;
import java.awt.Color;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class InsertHeavyMachinery extends javax.swing.JFrame {
    public static Vector heavyMaquineryV;
    private boolean available;
    private int type;
    Color c= new Color(150,150,255);
    HeavyMachineryFile machineryF;
    
    public InsertHeavyMachinery() throws IOException {
        machineryF=new HeavyMachineryFile();
        HeavyMachinery maquinery=new HeavyMachinery(1,300.50, "B123","Model 200","Caterpillar",true);
        this.available=false;
        this.type=1;//por defecto ser√° vagoneta
        this.heavyMaquineryV=new Vector(5);
        this.heavyMaquineryV.addElement(maquinery);
        initComponents();
        
        jbtDelete.setEnabled(false);
        jbtUpdate.setEnabled(false);
        
        comboAvailable.removeAllItems();
        comboAvailable.addItem("Yes");
        comboAvailable.addItem("No");
        comboType.removeAllItems();
        comboType.addItem("Wagon");//vagoneta
        comboType.addItem("Crane");//grua
        comboType.addItem("Forklift ");//montacarga
        
         
 
        this.setTitle("Insert Heavy Machinery");
        setLocationRelativeTo(null);
        setResizable(false);
        
      
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon uno = new ImageIcon(this.getClass().getResource("/Assets/fondoHM_1.jpg"));
        JLabel fondo = new JLabel();
        fondo.setIcon(uno);
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0, 0, uno.getIconWidth(), uno.getIconHeight());

        this.getContentPane().setBackground(c);
        this.setBackground(Color.BLACK);
    }

    public void insertHeavyMachinery(){
        try {
            if(this.comboAvailable.getSelectedItem()== "Yes"){
                this.available=true;
            }else{
                this.available=false;
            }
            if (this.comboAvailable.getSelectedItem()=="Wagon") {
                this.type=1;
            } else if(this.comboAvailable.getSelectedItem()=="Crane"){
                this.type=2;
            }else{
                this.type=3;
            }
            
            HeavyMachinery hM=new HeavyMachinery(this.type,
                    Double.parseDouble(jtLoadingC.getText()),
                    jtfID.getText(),jtModel.getText(),jtCardBrand.getText(),
                    this.available);
            if (machineryF.addEndRecord(hM)) {
                    JOptionPane.showMessageDialog(null, "Inserted");
                } else {
                    JOptionPane.showMessageDialog(null, "Not inserted");
                }//if
            
        } //insertHeavyMachinery
        catch (IOException ex) {
            Logger.getLogger(InsertHeavyMachinery.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void delete(){
        try {
            machineryF.deleteMachnery(jtfID.getText());
        } catch (IOException ex) {
            Logger.getLogger(InsertHeavyMachinery.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void update(){
        try {
            HeavyMachinery machinery=new HeavyMachinery(this.type,Integer.parseInt(jtLoadingC.getText()),jtfID.getText(),jtModel.getText(),jtCardBrand.getText(),this.available);
            machineryF.updateMachinery(jtfID.getText(), machinery);
        } catch (IOException ex) {
            Logger.getLogger(InsertHeavyMachinery.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void addHeavyMToVector(HeavyMachinery heavyM){
        heavyMaquineryV.addElement(heavyM);
        JOptionPane.showMessageDialog(null,"The element was inserted: "+heavyM.getIdVehicle());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlID = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jlMaquineryType = new javax.swing.JLabel();
        jbtInsert = new javax.swing.JButton();
        jbtCancel = new javax.swing.JButton();
        comboType = new javax.swing.JComboBox<>();
        jlModel = new javax.swing.JLabel();
        jtModel = new javax.swing.JTextField();
        jlCardBrand = new javax.swing.JLabel();
        jtCardBrand = new javax.swing.JTextField();
        jlAValiable = new javax.swing.JLabel();
        comboAvailable = new javax.swing.JComboBox<>();
        jlLoadingC = new javax.swing.JLabel();
        jtLoadingC = new javax.swing.JTextField();
        jbtDelete = new javax.swing.JButton();
        jbtSearch = new javax.swing.JButton();
        jbtUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlID.setForeground(new java.awt.Color(255, 255, 255));
        jlID.setText("ID:");

        jtfID.setBackground(new java.awt.Color(204, 204, 255));
        jtfID.setBorder(null);

        jlMaquineryType.setForeground(new java.awt.Color(255, 255, 255));
        jlMaquineryType.setText("Type Of Maquinery");

        jbtInsert.setBackground(new java.awt.Color(102, 102, 102));
        jbtInsert.setForeground(new java.awt.Color(255, 255, 255));
        jbtInsert.setText("Insert");
        jbtInsert.setBorder(null);
        jbtInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInsertActionPerformed(evt);
            }
        });

        jbtCancel.setBackground(new java.awt.Color(102, 102, 102));
        jbtCancel.setForeground(new java.awt.Color(255, 255, 255));
        jbtCancel.setText("Cancel");
        jbtCancel.setBorder(null);
        jbtCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelActionPerformed(evt);
            }
        });

        comboType.setBackground(new java.awt.Color(204, 204, 255));
        comboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboType.setBorder(null);

        jlModel.setForeground(new java.awt.Color(255, 255, 255));
        jlModel.setText("Car Model:");

        jtModel.setBackground(new java.awt.Color(204, 204, 255));
        jtModel.setBorder(null);

        jlCardBrand.setForeground(new java.awt.Color(255, 255, 255));
        jlCardBrand.setText("Car Brand:");

        jtCardBrand.setBackground(new java.awt.Color(204, 204, 255));
        jtCardBrand.setBorder(null);
        jtCardBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCardBrandActionPerformed(evt);
            }
        });

        jlAValiable.setForeground(new java.awt.Color(255, 255, 255));
        jlAValiable.setText("Available:");

        comboAvailable.setBackground(new java.awt.Color(204, 204, 255));
        comboAvailable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboAvailable.setBorder(null);

        jlLoadingC.setForeground(new java.awt.Color(255, 255, 255));
        jlLoadingC.setText("Loading Capacity:");

        jtLoadingC.setBackground(new java.awt.Color(204, 204, 255));
        jtLoadingC.setBorder(null);

        jbtDelete.setBackground(new java.awt.Color(102, 102, 102));
        jbtDelete.setForeground(new java.awt.Color(255, 255, 255));
        jbtDelete.setText("Delete");
        jbtDelete.setBorder(null);

        jbtSearch.setBackground(new java.awt.Color(102, 102, 102));
        jbtSearch.setForeground(new java.awt.Color(255, 255, 255));
        jbtSearch.setText("Search");
        jbtSearch.setBorder(null);
        jbtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSearchActionPerformed(evt);
            }
        });

        jbtUpdate.setBackground(new java.awt.Color(102, 102, 102));
        jbtUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jbtUpdate.setText("Update");
        jbtUpdate.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlMaquineryType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlLoadingC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbtDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(jbtCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtLoadingC, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlCardBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlAValiable, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtCardBrand)
                            .addComponent(comboAvailable, 0, 101, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlID, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19))
                            .addComponent(jlModel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfID, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(jtModel))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlID)
                    .addComponent(jtfID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlModel))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCardBrand)
                    .addComponent(jtCardBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlAValiable)
                    .addComponent(comboAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlMaquineryType, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlLoadingC)
                    .addComponent(jtLoadingC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInsertActionPerformed
        insertHeavyMachinery();
        jtfID.setText("");
        jtCardBrand.setText("");
        jtLoadingC.setText("");
        jtModel.setText("");
    }//GEN-LAST:event_jbtInsertActionPerformed

    private void jbtCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelActionPerformed
        this.dispose();
        VehicleWindow vehicule= new VehicleWindow();
        vehicule.setVisible(true);
    }//GEN-LAST:event_jbtCancelActionPerformed

    private void jtCardBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCardBrandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCardBrandActionPerformed

    private void jbtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSearchActionPerformed
        try {
            if (machineryF.Search(jtfID.getText())!=-1) {
                jbtDelete.setEnabled(true);
                jbtUpdate.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null, "The element was not found");
            }
        } catch (IOException ex) {
            Logger.getLogger(InsertHeavyMachinery.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboAvailable;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JButton jbtCancel;
    private javax.swing.JButton jbtDelete;
    private javax.swing.JButton jbtInsert;
    private javax.swing.JButton jbtSearch;
    private javax.swing.JButton jbtUpdate;
    private javax.swing.JLabel jlAValiable;
    private javax.swing.JLabel jlCardBrand;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlLoadingC;
    private javax.swing.JLabel jlMaquineryType;
    private javax.swing.JLabel jlModel;
    private javax.swing.JTextField jtCardBrand;
    private javax.swing.JTextField jtLoadingC;
    private javax.swing.JTextField jtModel;
    private javax.swing.JTextField jtfID;
    // End of variables declaration//GEN-END:variables
}
