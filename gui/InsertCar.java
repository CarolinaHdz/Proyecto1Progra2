
package gui;

import domain.Car;
import file.CarFile;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class InsertCar extends javax.swing.JFrame {
    Color c = new Color(150, 150, 255);
    public static Vector carV;
    private boolean available;
    CarFile carF;
    public InsertCar() throws IOException {
        carF=new CarFile();
        //Car car=new Car(5, "negro", 4, "1234", "Toyota", "Nadre", "Centra", true);
        Car car= new Car("Rex", 2018, 250,true,123);
        this.carV=new Vector(5);
        this.carV.addElement(car);
        
        initComponents();
        this.jbtDelete.setEnabled(false);
        this.jbtUpdate.setEnabled(false);
        setLocationRelativeTo(null);
        setResizable(false);
        this.setTitle("Insert Car");
        
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon uno = new ImageIcon(this.getClass().getResource("/Assets/car2_1.jpg"));
        JLabel fondo = new JLabel();
        fondo.setIcon(uno);
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0, 0, uno.getIconWidth(), uno.getIconHeight());

        this.getContentPane().setBackground(c);
        this.setBackground(Color.BLACK);
        
        comboAvailable.removeAllItems();
        comboAvailable.addItem("Yes");
	comboAvailable.addItem("No");
        
        comboAmerican.removeAllItems();;
        comboAmerican.addItem("Yes");
        comboAmerican.addItem("No");
        
        this.available=false;
    }
    
    public void addCarToVector(Car car1){
        carV.addElement(car1);
        JOptionPane.showMessageDialog(null,car1.getIdVehicle()+"car was inserted");
    }
    public void insert(){
        if(this.comboAvailable.getSelectedItem()== "Yes"){
            this.available=true;
        }else{
            this.available=false;
        }
        boolean american;
        if(this.comboAmerican.getSelectedItem()== "Yes"){
            american=true;
        }else{
            american=false;
        }
        
        try {
            //crea un carro
            if ((this.jtNameCar.getText().length()) < 20) {
                Car car1 = new Car(jtfID.getText(), jtfCarModel.getText(), 
                    jtfCardBrand.getText(), this.available,this.jtNameCar.getText(),Integer.parseInt(jtYear.getText()),Float.parseFloat(this.jtMileage.getText()), 
                    american,Integer.parseInt(jtSerie.getText()));//crea carro
            
                if (carF.addEndRecord(car1)) {
                    JOptionPane.showMessageDialog(null, "Inserted");
                } else {
                    JOptionPane.showMessageDialog(null, "Not inserted");
                }//if
            } else {
                JOptionPane.showMessageDialog(null, "Name too large, it needs to be 20 characters maximum");
            }
        } catch (IOException ex) {
            Logger.getLogger(InsertCar.class.getName()).log(Level.SEVERE, null, ex);
        }       
        
    }
    public void update(){
        try {
            if(this.comboAvailable.getSelectedItem()== "Yes"){
                this.available=true;
            }else{
                this.available=false;
            }
            boolean american;
            if(this.comboAmerican.getSelectedItem()== "Yes"){
                american=true;
            }else{
                american=false;
            }
            Car car1 = new Car(jtfID.getText(), jtfCarModel.getText(),
                    jtfCardBrand.getText(), this.available,this.jtNameCar.getText(),Integer.parseInt(jtYear.getText()),Float.parseFloat(this.jtMileage.getText()),
                    american,Integer.parseInt(jtSerie.getText()));
            carF.updateCar(Integer.parseInt(jtSerie.getText()), car1);
        } catch (IOException ex) {
            Logger.getLogger(InsertCar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void delete(){
        try {   
            carF.deleteCar(Integer.parseInt(jtSerie.getText()));
        } catch (IOException ex) {
            Logger.getLogger(InsertCar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlID = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jlCarModel = new javax.swing.JLabel();
        jtfCarModel = new javax.swing.JTextField();
        jbtInsert = new javax.swing.JButton();
        jbtCancel = new javax.swing.JButton();
        jlCardBrand = new javax.swing.JLabel();
        jtfCardBrand = new javax.swing.JTextField();
        jlAvailable = new javax.swing.JLabel();
        comboAvailable = new javax.swing.JComboBox<>();
        jlNameCar = new javax.swing.JLabel();
        jlYear = new javax.swing.JLabel();
        jlMileage = new javax.swing.JLabel();
        jlAmerican = new javax.swing.JLabel();
        jlSerie = new javax.swing.JLabel();
        jtYear = new javax.swing.JTextField();
        jtNameCar = new javax.swing.JTextField();
        jtMileage = new javax.swing.JTextField();
        comboAmerican = new javax.swing.JComboBox<>();
        jtSerie = new javax.swing.JTextField();
        jbtDelete = new javax.swing.JButton();
        jbtUpdate = new javax.swing.JButton();
        jbtSearch = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlID.setText("ID:");

        jtfID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIDActionPerformed(evt);
            }
        });

        jlCarModel.setForeground(new java.awt.Color(255, 255, 255));
        jlCarModel.setText("Car Model:");

        jbtInsert.setBackground(new java.awt.Color(0, 102, 102));
        jbtInsert.setForeground(new java.awt.Color(255, 255, 255));
        jbtInsert.setText("Insert");
        jbtInsert.setBorder(null);
        jbtInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInsertActionPerformed(evt);
            }
        });

        jbtCancel.setBackground(new java.awt.Color(0, 102, 102));
        jbtCancel.setForeground(new java.awt.Color(255, 255, 255));
        jbtCancel.setText("Cancel");
        jbtCancel.setBorder(null);
        jbtCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelActionPerformed(evt);
            }
        });

        jlCardBrand.setForeground(new java.awt.Color(255, 255, 255));
        jlCardBrand.setText("Card Brand: ");

        jlAvailable.setForeground(new java.awt.Color(255, 255, 255));
        jlAvailable.setText(" Available:");

        comboAvailable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAvailableActionPerformed(evt);
            }
        });

        jlNameCar.setForeground(new java.awt.Color(255, 255, 255));
        jlNameCar.setText("Name Car:");

        jlYear.setForeground(new java.awt.Color(255, 255, 255));
        jlYear.setText("Year: ");

        jlMileage.setForeground(new java.awt.Color(255, 255, 255));
        jlMileage.setText(" Mileage: ");

        jlAmerican.setForeground(new java.awt.Color(255, 255, 255));
        jlAmerican.setText("American:");

        jlSerie.setForeground(new java.awt.Color(255, 255, 255));
        jlSerie.setText("Serie: ");

        jtNameCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNameCarActionPerformed(evt);
            }
        });

        comboAmerican.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtDelete.setBackground(new java.awt.Color(0, 102, 102));
        jbtDelete.setForeground(new java.awt.Color(255, 255, 255));
        jbtDelete.setText("Delete");
        jbtDelete.setBorder(null);
        jbtDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDeleteActionPerformed(evt);
            }
        });

        jbtUpdate.setBackground(new java.awt.Color(0, 102, 102));
        jbtUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jbtUpdate.setText("Update");
        jbtUpdate.setBorder(null);
        jbtUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtUpdateActionPerformed(evt);
            }
        });

        jbtSearch.setBackground(new java.awt.Color(0, 102, 102));
        jbtSearch.setForeground(new java.awt.Color(255, 255, 255));
        jbtSearch.setText("Search");
        jbtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlID, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCarModel, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(jlCardBrand, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(jlAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jbtInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtfCardBrand, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(jtfCarModel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboAvailable, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlYear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jlMileage)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(jlAmerican, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jlSerie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtMileage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboAmerican, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jtSerie, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jlNameCar, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24)
                                        .addComponent(jtNameCar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jlCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfCarModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(148, 148, 148))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlYear, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtYear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNameCar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNameCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlMileage, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtMileage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboAmerican, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlAmerican)
                            .addComponent(jlCardBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfCardBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlSerie))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtSearch)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInsertActionPerformed
        insert();
        jtMileage.setText("");
        jtNameCar.setText("");
        jtSerie.setText("");
        jtYear.setText("");
        jtfCarModel.setText("");
        jtfCardBrand.setText("");
        jtfID.setText("");
    }//GEN-LAST:event_jbtInsertActionPerformed

    private void jbtCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelActionPerformed
        this.dispose();
        VehicleWindow vehicule= new VehicleWindow();
        vehicule.setVisible(true);
    }//GEN-LAST:event_jbtCancelActionPerformed

    private void jtfIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfIDActionPerformed

    private void comboAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAvailableActionPerformed
        
    }//GEN-LAST:event_comboAvailableActionPerformed

    private void jtNameCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNameCarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNameCarActionPerformed

    private void jbtDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDeleteActionPerformed
        delete();
        jtMileage.setText("");
        jtNameCar.setText("");
        jtSerie.setText("");
        jtYear.setText("");
        jtfCarModel.setText("");
        jtfCardBrand.setText("");
        jtfID.setText("");
    }//GEN-LAST:event_jbtDeleteActionPerformed

    private void jbtUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtUpdateActionPerformed
        update();
        jtMileage.setText("");
        jtNameCar.setText("");
        jtSerie.setText("");
        jtYear.setText("");
        jtfCarModel.setText("");
        jtfCardBrand.setText("");
        jtfID.setText("");
    }//GEN-LAST:event_jbtUpdateActionPerformed

    private void jbtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSearchActionPerformed
        try {
            int correctSearch=Integer.parseInt(jtSerie.getText());
            int search=carF.Search(correctSearch);
            if (search!=-1) {
                this.jbtDelete.setEnabled(true);
                this.jbtUpdate.setEnabled(true);
                Car car1 =(Car)carF.getCar(search);
                jtMileage.setText(String.valueOf(car1.getMileage()));
                jtNameCar.setText(car1.getName());
                jtSerie.setText(String.valueOf(car1.getSerie()));
                jtYear.setText(String.valueOf(car1.getYear()));
                jtfCarModel.setText(car1.getModel());
                jtfCardBrand.setText(car1.getCardBrand());
                jtfID.setText(car1.getIdVehicle());
                if(this.comboAvailable.getSelectedItem()== "Yes"){
                    this.available=true;
                }else{
                    this.available=false;
                }
                boolean american;
                if(this.comboAmerican.getSelectedItem()== "Yes"){
                    american=true;
                }else{
                    american=false;
                }
            }else{
                JOptionPane.showMessageDialog(null, "The element was not found");
            }
        } catch (IOException ex) {
            Logger.getLogger(InsertCar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtSearchActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboAmerican;
    private javax.swing.JComboBox<String> comboAvailable;
    private javax.swing.JButton jbtCancel;
    private javax.swing.JButton jbtDelete;
    private javax.swing.JButton jbtInsert;
    private javax.swing.JButton jbtSearch;
    private javax.swing.JButton jbtUpdate;
    private javax.swing.JLabel jlAmerican;
    private javax.swing.JLabel jlAvailable;
    private javax.swing.JLabel jlCarModel;
    private javax.swing.JLabel jlCardBrand;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlMileage;
    private javax.swing.JLabel jlNameCar;
    private javax.swing.JLabel jlSerie;
    private javax.swing.JLabel jlYear;
    private javax.swing.JTextField jtMileage;
    private javax.swing.JTextField jtNameCar;
    private javax.swing.JTextField jtSerie;
    private javax.swing.JTextField jtYear;
    private javax.swing.JTextField jtfCarModel;
    private javax.swing.JTextField jtfCardBrand;
    private javax.swing.JTextField jtfID;
    // End of variables declaration//GEN-END:variables
}
