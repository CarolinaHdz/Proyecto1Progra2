/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import domain.Administrative;
import domain.CarDriver;
import domain.HeavyMachineryDriver;
import domain.Janitor;
import file.AdministrativeFile;
import file.JanitorFile;
import java.awt.Color;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import jdk.nashorn.internal.objects.Global;
import utility.Path;


public class InsertJanitor extends javax.swing.JFrame {
    Color c = new Color(150, 150, 255);
    public static Vector janitorVector;
    public InsertJanitor() {
        Janitor jani1= new Janitor("Julio", "Mora", "456789", "222222", true,2);
        this.janitorVector=new Vector(5);
        this.janitorVector.addElement(jani1);
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        this.setTitle("Insert Janitor");
        
        comboQualify.removeAllItems();
        comboQualify.addItem("Yes");
        comboQualify.addItem("No");
        
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon uno = new ImageIcon(this.getClass().getResource("/Assets/janitor.jpg"));
        JLabel fondo = new JLabel();
        fondo.setIcon(uno);
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0, 0, uno.getIconWidth(), uno.getIconHeight());

        this.getContentPane().setBackground(c);
        this.setBackground(Color.BLACK);
        
    }

    public Vector getJanitorVector() {
        return janitorVector;
    }

    public void setJanitorVector(Vector janitorVector) {
        this.janitorVector = janitorVector;
    }
    
    public void addJanitorToVector(Janitor janitor){
        janitorVector.addElement(janitor);
        JOptionPane.showMessageDialog(null,"Se insert√≥ el elemento: "+janitor.toString());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlName = new javax.swing.JLabel();
        jlSurname = new javax.swing.JLabel();
        jlID = new javax.swing.JLabel();
        jlNumberOfEmployee = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jtfID = new javax.swing.JTextField();
        jtfNumberOfEmployee = new javax.swing.JTextField();
        jlExtraHours = new javax.swing.JLabel();
        jtfExtraHours = new javax.swing.JTextField();
        jButtonInsert = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jlQualified = new javax.swing.JLabel();
        jtfSurname = new javax.swing.JTextField();
        comboQualify = new javax.swing.JComboBox<>();
        jbUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlName.setBackground(new java.awt.Color(153, 102, 0));
        jlName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlName.setForeground(new java.awt.Color(255, 255, 255));
        jlName.setText("Name:");
        jlName.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jlSurname.setBackground(new java.awt.Color(153, 102, 0));
        jlSurname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSurname.setForeground(new java.awt.Color(255, 255, 255));
        jlSurname.setText("Surnames::");
        jlSurname.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jlID.setBackground(new java.awt.Color(153, 102, 0));
        jlID.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlID.setForeground(new java.awt.Color(255, 255, 255));
        jlID.setText("ID:");
        jlID.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jlNumberOfEmployee.setBackground(new java.awt.Color(153, 102, 0));
        jlNumberOfEmployee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNumberOfEmployee.setForeground(new java.awt.Color(255, 255, 255));
        jlNumberOfEmployee.setText("Number employee:");
        jlNumberOfEmployee.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jtfName.setBackground(new java.awt.Color(204, 255, 204));
        jtfName.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jtfID.setBackground(new java.awt.Color(204, 255, 204));
        jtfID.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jtfNumberOfEmployee.setBackground(new java.awt.Color(204, 255, 204));
        jtfNumberOfEmployee.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jlExtraHours.setBackground(new java.awt.Color(153, 102, 0));
        jlExtraHours.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlExtraHours.setForeground(new java.awt.Color(255, 255, 255));
        jlExtraHours.setText("Extra Hours:");
        jlExtraHours.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jtfExtraHours.setBackground(new java.awt.Color(204, 255, 204));
        jtfExtraHours.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jButtonInsert.setBackground(new java.awt.Color(153, 102, 0));
        jButtonInsert.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonInsert.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInsert.setText(" Get in");
        jButtonInsert.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonCancel.setBackground(new java.awt.Color(153, 102, 0));
        jButtonCancel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonCancel.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCancel.setText("Cancel");
        jButtonCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jlQualified.setBackground(new java.awt.Color(153, 102, 0));
        jlQualified.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlQualified.setForeground(new java.awt.Color(255, 255, 255));
        jlQualified.setText("Qualify");
        jlQualified.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jtfSurname.setBackground(new java.awt.Color(204, 255, 204));
        jtfSurname.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        comboQualify.setBackground(new java.awt.Color(204, 255, 204));
        comboQualify.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboQualify.setBorder(null);

        jbUpdate.setBackground(new java.awt.Color(153, 102, 0));
        jbUpdate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jbUpdate.setText("Update");
        jbUpdate.setBorder(null);
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlName, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlSurname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlNumberOfEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfNumberOfEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(jtfID)
                            .addComponent(jtfName)
                            .addComponent(jtfSurname))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlExtraHours, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlQualified, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfExtraHours, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                            .addComponent(comboQualify, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jlQualified)
                        .addComponent(jlName)
                        .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboQualify, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSurname)
                    .addComponent(jtfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlExtraHours)
                    .addComponent(jtfExtraHours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNumberOfEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNumberOfEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        
        if (jtfName.getText().equals("") || jtfSurname.getText().equals("")
            || jtfID.getText().equals("") || jtfNumberOfEmployee.getText().equals("")
                || jtfExtraHours.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Error! There are blank spaces");//verifica espacios en blanco
        } else {
            try {

                boolean qualified;
                if (comboQualify.getSelectedItem()=="Yes") {
                    qualified=true;
                } else {
                    qualified=false;
                }
                
                JanitorFile janitorFile = new JanitorFile(Path.my_janitor_list_path);
                if (!janitorFile.getByIDBoolean(jtfID.getText())) {
                    try {
                        Janitor janitor=new Janitor(jtfName.getText(), jtfSurname.getText(), jtfID.getText()
                        , jtfNumberOfEmployee.getText(), qualified,Integer.parseInt(jtfExtraHours.getText()));
                        
                        janitorFile.saveJanitor(janitor);
                        JOptionPane.showMessageDialog(null,"The employee "+jtfName.getText()+" has been inserted successfully");
                    } catch (IOException ex) {
                        Logger.getLogger(InsertJanitor.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(InsertJanitor.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "This ID already exists");
                }
            } //else
            catch (IOException ex) {
                Logger.getLogger(InsertJanitor.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InsertJanitor.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        jtfName.setText("");
        jtfSurname.setText("");
        jtfID.setText("");
        jtfNumberOfEmployee.setText("");
        jtfExtraHours.setText(""); 
       
        //addJanitorToVector(janitor);
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose();
        EmployeeWindow emp= new EmployeeWindow();
        emp.setVisible(true);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateActionPerformed
        if (jtfName.getText().equals("") || jtfSurname.getText().equals("")
            || jtfID.getText().equals("") || jtfNumberOfEmployee.getText().equals("")
                || jtfExtraHours.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Error! There are blank spaces");//verifica espacios en blanco
        } else {    
            try {
                boolean qualified;
                if (comboQualify.getSelectedItem()=="Yes") {
                    qualified=true;
                } else {
                    qualified=false;
                }
                JanitorFile janitorFile = new JanitorFile(Path.my_janitor_list_path);
                janitorFile.updateJanitor(jtfName.getText(),jtfSurname.getText(),jtfID.getText(),jtfNumberOfEmployee.getText(),
                        qualified,Integer.parseInt(jtfExtraHours.getText()));
                JOptionPane.showMessageDialog(null,"The employee has been updated");
            } catch (IOException ex) {
                Logger.getLogger(InsertJanitor.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InsertJanitor.class.getName()).log(Level.SEVERE, null, ex);
            }
        }//if
    }//GEN-LAST:event_jbUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboQualify;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JLabel jlExtraHours;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlNumberOfEmployee;
    private javax.swing.JLabel jlQualified;
    private javax.swing.JLabel jlSurname;
    private javax.swing.JTextField jtfExtraHours;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfNumberOfEmployee;
    private javax.swing.JTextField jtfSurname;
    // End of variables declaration//GEN-END:variables
}
