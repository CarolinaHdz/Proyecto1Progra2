/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import domain.Administrative;
import domain.CarDriver;
import domain.HeavyMachineryDriver;
import domain.Janitor;
import file.AdministrativeFile;
import file.HeavyMechineryDriverFile;
import java.awt.Color;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import utility.Path;


public class InsertHeavyMachineryDriver extends javax.swing.JFrame {
    Color c= new Color(150,150,255);
    public static Vector heavyMachineryDriverVector;
    public InsertHeavyMachineryDriver() {
        HeavyMachineryDriver driver=new HeavyMachineryDriver("Julio","Cordero","12", "2",true,8, true,100,32);
        
        this.setVisible(true);
        this.heavyMachineryDriverVector=new Vector(5);
        this.heavyMachineryDriverVector.addElement(driver);
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        this.setTitle("Insert Heavy Machinery Driver");
        
        comboQualify.removeAllItems();;
        comboQualify.addItem("Yes");
        comboQualify.addItem("No");
        
        comboTurn.removeAllItems();
        comboTurn.addItem("Day");
        comboTurn.addItem("Night");
        
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon uno = new ImageIcon(this.getClass().getResource("/Assets/machinery.jpg"));
        JLabel fondo = new JLabel();
        fondo.setIcon(uno);
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0, 0, uno.getIconWidth(), uno.getIconHeight());

        this.getContentPane().setBackground(c);
        this.setBackground(Color.BLACK);
    }

    public Vector getHeavyMachineryDriverVector() {
        return heavyMachineryDriverVector;
    }

    public void setHeavyMachineryDriverVector(Vector heavyMachineryDriverVector) {
        this.heavyMachineryDriverVector = heavyMachineryDriverVector;
    }
    
    public void addHeavyDriverToVector(HeavyMachineryDriver heavyDriver){
        heavyMachineryDriverVector.addElement(heavyDriver);
        JOptionPane.showMessageDialog(null,"The employee was inserted: \n"+heavyDriver.toString());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlName = new javax.swing.JLabel();
        jlSurname = new javax.swing.JLabel();
        jlID = new javax.swing.JLabel();
        jlNumberOfEmployee = new javax.swing.JLabel();
        jtfName = new javax.swing.JTextField();
        jtfID = new javax.swing.JTextField();
        jtfNumberOfEmployee = new javax.swing.JTextField();
        jlWeight = new javax.swing.JLabel();
        jtfWeight = new javax.swing.JTextField();
        jlAge = new javax.swing.JLabel();
        jtfAge = new javax.swing.JTextField();
        jlWorkedHours = new javax.swing.JLabel();
        jtfWorkedHours = new javax.swing.JTextField();
        jlTurn = new javax.swing.JLabel();
        jButtonInsert = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jlQualified = new javax.swing.JLabel();
        jtfSurname = new javax.swing.JTextField();
        comboQualify = new javax.swing.JComboBox<>();
        comboTurn = new javax.swing.JComboBox<>();
        jbUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlName.setBackground(new java.awt.Color(153, 153, 255));
        jlName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlName.setForeground(new java.awt.Color(255, 255, 255));
        jlName.setText("Name:");

        jlSurname.setBackground(new java.awt.Color(153, 153, 255));
        jlSurname.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlSurname.setForeground(new java.awt.Color(255, 255, 255));
        jlSurname.setText("Surname:");

        jlID.setBackground(new java.awt.Color(153, 153, 255));
        jlID.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlID.setForeground(new java.awt.Color(255, 255, 255));
        jlID.setText("ID:");

        jlNumberOfEmployee.setBackground(new java.awt.Color(153, 153, 255));
        jlNumberOfEmployee.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlNumberOfEmployee.setForeground(new java.awt.Color(255, 255, 255));
        jlNumberOfEmployee.setText("Number Employee:");

        jtfName.setBackground(new java.awt.Color(204, 204, 255));
        jtfName.setBorder(null);

        jtfID.setBackground(new java.awt.Color(204, 204, 255));
        jtfID.setBorder(null);

        jtfNumberOfEmployee.setBackground(new java.awt.Color(204, 204, 255));
        jtfNumberOfEmployee.setBorder(null);

        jlWeight.setBackground(new java.awt.Color(153, 153, 255));
        jlWeight.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlWeight.setForeground(new java.awt.Color(255, 255, 255));
        jlWeight.setText(" Driver Weigh:");

        jtfWeight.setBackground(new java.awt.Color(204, 204, 255));
        jtfWeight.setBorder(null);

        jlAge.setBackground(new java.awt.Color(153, 153, 255));
        jlAge.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlAge.setForeground(new java.awt.Color(255, 255, 255));
        jlAge.setText("Driver Age:");

        jtfAge.setBackground(new java.awt.Color(204, 204, 255));
        jtfAge.setBorder(null);

        jlWorkedHours.setBackground(new java.awt.Color(153, 153, 255));
        jlWorkedHours.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlWorkedHours.setForeground(new java.awt.Color(255, 255, 255));
        jlWorkedHours.setText("Worked Hours:");

        jtfWorkedHours.setBackground(new java.awt.Color(204, 204, 255));
        jtfWorkedHours.setBorder(null);

        jlTurn.setBackground(new java.awt.Color(153, 153, 255));
        jlTurn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlTurn.setForeground(new java.awt.Color(255, 255, 255));
        jlTurn.setText("Turn:");

        jButtonInsert.setBackground(new java.awt.Color(153, 153, 255));
        jButtonInsert.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonInsert.setText("Get In");
        jButtonInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertActionPerformed(evt);
            }
        });

        jButtonCancel.setBackground(new java.awt.Color(153, 153, 255));
        jButtonCancel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jlQualified.setBackground(new java.awt.Color(153, 153, 255));
        jlQualified.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlQualified.setForeground(new java.awt.Color(255, 255, 255));
        jlQualified.setText("Qualify:");

        jtfSurname.setBackground(new java.awt.Color(204, 204, 255));
        jtfSurname.setBorder(null);

        comboQualify.setBackground(new java.awt.Color(153, 153, 255));
        comboQualify.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboQualify.setBorder(null);

        comboTurn.setBackground(new java.awt.Color(153, 153, 255));
        comboTurn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboTurn.setBorder(null);

        jbUpdate.setBackground(new java.awt.Color(153, 153, 255));
        jbUpdate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jbUpdate.setText("Update");
        jbUpdate.setBorder(null);
        jbUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jlNumberOfEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlSurname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jlName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jlQualified, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comboQualify, 0, 97, Short.MAX_VALUE)
                    .addComponent(jtfName)
                    .addComponent(jtfSurname)
                    .addComponent(jtfID)
                    .addComponent(jtfNumberOfEmployee))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlAge, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlWorkedHours, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfAge, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfWorkedHours, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboTurn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfWeight)
                        .addGap(32, 32, 32))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfNumberOfEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlNumberOfEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlAge, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfAge, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlWorkedHours, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfWorkedHours, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jlTurn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(comboTurn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboQualify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlQualified, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInsert)
                    .addComponent(jButtonCancel)
                    .addComponent(jbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertActionPerformed
        
        if (jtfName.getText().equals("") || jtfSurname.getText().equals("")
            || jtfID.getText().equals("") || jtfNumberOfEmployee.getText().equals("")
                || jtfWeight.getText().equals("") || jtfAge.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Error! There are blank spaces");//verifica espacios en blanco
        } else {
            try {
               boolean qualified;
                boolean turn;
                if (comboQualify.getSelectedItem()=="Yes") {
                    qualified=true;
                } else {
                    qualified=false;
                }
                if (comboTurn.getSelectedItem()=="Day") {
                    turn=true;
                } else {
                    turn=false;
                }
                
                HeavyMechineryDriverFile hmDriverFile = new HeavyMechineryDriverFile(Path.my_hMDriver_list_path);
                if (!hmDriverFile.getByIDBoolean(jtfID.getText())) {
                    try {
                       HeavyMachineryDriver machineryDriver=new HeavyMachineryDriver(jtfName.getText(), jtfSurname.getText(),
                        jtfID.getText(),jtfNumberOfEmployee.getText(), qualified
                        ,Double.parseDouble(jtfWorkedHours.getText()), turn,Double.parseDouble(jtfWeight.getText()),Integer.parseInt(jtfAge.getText())); 
                        
                        hmDriverFile.saveHMDriver(machineryDriver);
                        JOptionPane.showMessageDialog(null,"The employee "+jtfName.getText()+" has been inserted successfully");
                    } catch (IOException ex) {
                        Logger.getLogger(InsertHeavyMachineryDriver.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(InsertHeavyMachineryDriver.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "This ID already exists");
                }
            } //else
            catch (IOException ex) {
                Logger.getLogger(InsertHeavyMachineryDriver.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InsertHeavyMachineryDriver.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        jtfName.setText("");
        jtfSurname.setText("");
        jtfID.setText("");
        jtfNumberOfEmployee.setText("");
        jtfWorkedHours.setText("");
        jtfWeight.setText("");        
        jtfAge.setText("");
        
        
        //addHeavyDriverToVector(machineryDriver);
    }//GEN-LAST:event_jButtonInsertActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose();
        EmployeeWindow emp= new EmployeeWindow();
        emp.setVisible(true);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jbUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateActionPerformed
        if (jtfName.getText().equals("") || jtfSurname.getText().equals("")
            || jtfID.getText().equals("") || jtfNumberOfEmployee.getText().equals("")
                || jtfWeight.getText().equals("") || jtfAge.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Error! There are blank spaces");//verifica espacios en blanco
        } else {        
            try {
                   boolean qualified;
                    boolean turn;
                    if (comboQualify.getSelectedItem()=="Yes") {
                        qualified=true;
                    } else {
                        qualified=false;
                    }
                    if (comboTurn.getSelectedItem()=="Day") {
                        turn=true;
                    } else {
                        turn=false;
                    }

                HeavyMechineryDriverFile hmFile = new HeavyMechineryDriverFile(Path.my_hMDriver_list_path);
                hmFile.updateHMDriver(jtfName.getText(),jtfSurname.getText(),jtfID.getText(),jtfNumberOfEmployee.getText(),
                                     qualified,Double.parseDouble(jtfWorkedHours.getText()),turn,Double.parseDouble(jtfWeight.getText()),Integer.parseInt(jtfAge.getText()));
                JOptionPane.showMessageDialog(null,"The employee has been updated");

            } catch (IOException ex) {
                Logger.getLogger(InsertHeavyMachineryDriver.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(InsertHeavyMachineryDriver.class.getName()).log(Level.SEVERE, null, ex);
            }
        }//if
    }//GEN-LAST:event_jbUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboQualify;
    private javax.swing.JComboBox<String> comboTurn;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonInsert;
    private javax.swing.JButton jbUpdate;
    private javax.swing.JLabel jlAge;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlNumberOfEmployee;
    private javax.swing.JLabel jlQualified;
    private javax.swing.JLabel jlSurname;
    private javax.swing.JLabel jlTurn;
    private javax.swing.JLabel jlWeight;
    private javax.swing.JLabel jlWorkedHours;
    private javax.swing.JTextField jtfAge;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfNumberOfEmployee;
    private javax.swing.JTextField jtfSurname;
    private javax.swing.JTextField jtfWeight;
    private javax.swing.JTextField jtfWorkedHours;
    // End of variables declaration//GEN-END:variables
}
