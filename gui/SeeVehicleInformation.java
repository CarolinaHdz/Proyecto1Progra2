/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import domain.Car;
import domain.HeavyMachinery;
import java.awt.Color;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class SeeVehicleInformation extends javax.swing.JFrame {
    private Vector maquineryV;
    private Vector carV;
    private int choice;
    Color c= new Color(150,150,255);
    
    
    public SeeVehicleInformation() {        
        this.maquineryV=new Vector(5);
        this.carV=new Vector(5);
        this.carV=(Vector)InsertCar.carV;
        this.choice=1;
        initComponents();
        this.jtfID.setEditable(false);
        this.setTitle("Information Window");
        setLocationRelativeTo(null);
        setResizable(false);
        
      
        ((JPanel)getContentPane()).setOpaque(false);
        ImageIcon uno = new ImageIcon(this.getClass().getResource("/Assets/image4.jpg"));
        JLabel fondo = new JLabel();
        fondo.setIcon(uno);
        getLayeredPane().add(fondo, JLayeredPane.FRAME_CONTENT_LAYER);
        fondo.setBounds(0, 0, uno.getIconWidth(), uno.getIconHeight());

        this.getContentPane().setBackground(c);
        this.setBackground(Color.BLACK);
    }
    public void heavyMInfo(String maquinerySearch){
        //esta variable se crea para saber si el elemento que queremos borrar existe
        boolean exist=false;
        HeavyMachinery hMaquinery=(HeavyMachinery)maquineryV.elementAt(0);
        String maquineryID=hMaquinery.getIdVehicle();
        //se recorre el vector
        for (int i = 0; i < maquineryV.size(); i++) {
            //se pregunta si el elemento por borrar es igual al que esta en esa posicion del vector
            if (maquineryID.equalsIgnoreCase(maquinerySearch)) {
                exist=true;
                i=maquineryV.size();
            } else {
                hMaquinery=(HeavyMachinery)maquineryV.elementAt(i);
                maquineryID=(String)hMaquinery.getIdVehicle();
            }
        }
        //se controla el mensaje de salida, si existe el elmento por borrar, lo borra
        if (exist==true) {
            JOptionPane.showMessageDialog(null, "Se encontró el nombre: "+maquineryID);
            jTextAreaInfo.setText(hMaquinery.toString());
            //si no muestra un mensaje que el elemento que queremos borrar no existe en el vector
        } else {
            JOptionPane.showMessageDialog(null, "No existe el elemento: "+maquineryID);
        }
    }
    public void carInfo(String carSearch){
        //esta variable se crea para saber si el elemento que queremos borrar existe
        boolean exist=false;
        Car car=(Car)carV.elementAt(0);
        String carID=(String)car.getIdVehicle();
        //se recorre el vector
        for (int i = 0; i < carV.size(); i++) {
            //se pregunta si el elemento por borrar es igual al que esta en esa posicion del vector
            if (carID.equalsIgnoreCase(carSearch)) {
                exist=true;
                i=carV.size();
            } else {
                car=(Car)carV.elementAt(i);
                carID=(String)car.getIdVehicle();
            }
        }
        //se controla el mensaje de salida, si existe el elmento por borrar, lo borra
        if (exist==true) {
            JOptionPane.showMessageDialog(null, "Se encontró el nombre: "+carSearch);
            jTextAreaInfo.setText(car.toString());
            //si no muestra un mensaje que el elemento que queremos borrar no existe en el vector
        } else {
            JOptionPane.showMessageDialog(null, "No existe el elemento: "+carSearch);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlID = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaInfo = new javax.swing.JTextArea();
        jbtSeeInfo = new javax.swing.JButton();
        jbtCancel = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemCarInfo = new javax.swing.JMenuItem();
        jMenuItemHMInfo = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlID.setBackground(new java.awt.Color(0, 0, 0));
        jlID.setForeground(new java.awt.Color(255, 255, 255));
        jlID.setText("ID:");

        jtfID.setBackground(new java.awt.Color(51, 51, 51));
        jtfID.setForeground(new java.awt.Color(255, 255, 255));
        jtfID.setBorder(null);

        jTextAreaInfo.setBackground(new java.awt.Color(0, 0, 0));
        jTextAreaInfo.setColumns(20);
        jTextAreaInfo.setForeground(new java.awt.Color(255, 255, 255));
        jTextAreaInfo.setRows(5);
        jTextAreaInfo.setBorder(null);
        jScrollPane1.setViewportView(jTextAreaInfo);

        jbtSeeInfo.setBackground(new java.awt.Color(0, 0, 0));
        jbtSeeInfo.setForeground(new java.awt.Color(255, 255, 255));
        jbtSeeInfo.setText("See Info");
        jbtSeeInfo.setBorder(null);
        jbtSeeInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSeeInfoActionPerformed(evt);
            }
        });

        jbtCancel.setBackground(new java.awt.Color(0, 0, 0));
        jbtCancel.setForeground(new java.awt.Color(255, 255, 255));
        jbtCancel.setText("Cancel");
        jbtCancel.setBorder(null);
        jbtCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelActionPerformed(evt);
            }
        });

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 0));
        jMenuBar1.setBorder(null);
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));

        jMenu1.setBackground(new java.awt.Color(0, 0, 102));
        jMenu1.setForeground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("File");

        jMenuItemCarInfo.setBackground(new java.awt.Color(0, 0, 102));
        jMenuItemCarInfo.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemCarInfo.setText("Car Info");
        jMenuItemCarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCarInfoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemCarInfo);

        jMenuItemHMInfo.setBackground(new java.awt.Color(0, 0, 102));
        jMenuItemHMInfo.setForeground(new java.awt.Color(255, 255, 255));
        jMenuItemHMInfo.setText("HM Info");
        jMenuItemHMInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemHMInfoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemHMInfo);

        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(0, 0, 102));
        jMenu2.setForeground(new java.awt.Color(255, 255, 255));
        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlID, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtSeeInfo)
                .addGap(26, 26, 26)
                .addComponent(jbtCancel)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jtfID))
                    .addComponent(jlID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtCancel)
                    .addComponent(jbtSeeInfo))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemHMInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemHMInfoActionPerformed
        this.choice=1;
        this.jtfID.setEditable(true);
    }//GEN-LAST:event_jMenuItemHMInfoActionPerformed

    private void jMenuItemCarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCarInfoActionPerformed
        this.choice=2;
        this.jtfID.setEditable(true);
    }//GEN-LAST:event_jMenuItemCarInfoActionPerformed

    private void jbtSeeInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSeeInfoActionPerformed
        switch(choice){
            case 1:
                heavyMInfo(jtfID.getText());
                break;
            case 2:
                carInfo(jtfID.getText());
                break;
        }
    }//GEN-LAST:event_jbtSeeInfoActionPerformed

    private void jbtCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelActionPerformed
        this.dispose();
        VehicleWindow vehicule= new VehicleWindow();
        vehicule.setVisible(true);
    }//GEN-LAST:event_jbtCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemCarInfo;
    private javax.swing.JMenuItem jMenuItemHMInfo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaInfo;
    private javax.swing.JButton jbtCancel;
    private javax.swing.JButton jbtSeeInfo;
    private javax.swing.JLabel jlID;
    private javax.swing.JTextField jtfID;
    // End of variables declaration//GEN-END:variables
}
